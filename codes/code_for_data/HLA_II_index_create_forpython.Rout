
R version 4.4.0 (2024-04-24) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> 
> HLA  = readRDS("../conditional_TCR_prediction/data/DeWitt_2018/HLA_v2_CMV_data.rds")
> HLA_no_NA = HLA[ ,!is.na(HLA[216,])]
> HLA_only = HLA_no_NA[1:215,]
> CMV = HLA_no_NA[216,]
> dat = readRDS("../conditional_TCR_prediction/data/HLA_II_similarity_matrix_aa.rds")
> 
> #These are the HLAs that has been lumped together, now we are breaking them.
> 
> exceptions = c("HLA-DRDQ*03:01_05:01_02:01","HLA-DRDQ*09:01_03:02_03:03",
+                "HLA-DRDQ*10:01_01:05_05:01","HLA-DRDQ*13:01_01:03_06:03", "HLA-DRDQ*15:01_01:02_06:02")
> exception_DRB1_names = c("HLA-DRB1*03:01", "HLA-DRB1*09:01", "HLA-DRB1*10:01",
+                          "HLA-DRB1*13:01", "HLA-DRB1*15:01")
> exception_DQAB_names = c("HLA-DQAB*05:01_02:01", "HLA-DQAB*03:02_03:03", "HLA-DQAB*01:05_05:01",
+                          "HLA-DQAB*01:03_06:03", "HLA-DQAB*01:02_06:02")
> exception_index = match(exceptions, rownames(HLA_only))
> exception_index
[1]  61 169   8  89 132
> 
> newHLA_names = rownames(HLA_only)
> newdata = HLA_only[exception_index,]
> rownames(newdata) = exception_DQAB_names
> newHLA_names[exception_index] = exception_DRB1_names
> rownames(HLA_only) = newHLA_names
> split_HLA = rbind(HLA_only,newdata)
> 
> # This extracts all the HLAs that are both in the correlation matrix as well as the HLA matrix.
> HLA_II_index = sort((match(rownames(dat) , rownames(HLA_only)))[!is.na(match(rownames(dat) , rownames(HLA_only)))])
> 
> # This concates the extra HLAs
> HLA_II_index = c(HLA_II_index,c(216,217,218,219,220))
> rownames(split_HLA)[HLA_II_index]
  [1] "HLA-DPAB*02:01_04:01" "HLA-DQAB*05:05_06:04" "HLA-DPAB*02:01_04:02"
  [4] "HLA-DRB1*10:01"       "HLA-DRB1*01:03"       "HLA-DQAB*05:05_03:01"
  [7] "HLA-DQAB*05:05_03:02" "HLA-DQAB*05:05_03:03" "HLA-DQAB*03:03_05:01"
 [10] "HLA-DPAB*01:03_11:01" "HLA-DRB1*16:01"       "HLA-DPAB*02:01_13:01"
 [13] "HLA-DQAB*03:03_03:01" "HLA-DQAB*03:03_03:02" "HLA-DPAB*02:01_03:01"
 [16] "HLA-DQAB*02:01_03:01" "HLA-DQAB*03:03_06:02" "HLA-DQAB*02:01_03:03"
 [19] "HLA-DQAB*02:01_03:02" "HLA-DRB1*01:01"       "HLA-DRB1*01:02"      
 [22] "HLA-DRB1*07:01"       "HLA-DQAB*05:01_02:02" "HLA-DQAB*06:01_03:01"
 [25] "HLA-DPAB*01:03_17:01" "HLA-DPAB*01:03_05:01" "HLA-DPAB*02:01_01:01"
 [28] "HLA-DQAB*01:01_05:03" "HLA-DQAB*01:01_05:01" "HLA-DQAB*01:01_02:02"
 [31] "HLA-DPAB*02:02_01:01" "HLA-DQAB*05:01_03:01" "HLA-DQAB*01:02_02:01"
 [34] "HLA-DRB1*03:01"       "HLA-DQAB*01:01_03:01" "HLA-DQAB*01:01_03:02"
 [37] "HLA-DRB1*12:01"       "HLA-DQAB*04:01_04:02" "HLA-DQAB*01:04_02:01"
 [40] "HLA-DRB1*12:02"       "HLA-DQAB*01:02_05:01" "HLA-DRB1*11:04"      
 [43] "HLA-DQAB*01:02_05:02" "HLA-DQAB*05:05_06:03" "HLA-DQAB*05:05_06:02"
 [46] "HLA-DRB1*11:03"       "HLA-DRB1*11:02"       "HLA-DRB1*08:02"      
 [49] "HLA-DQAB*03:01_03:02" "HLA-DPAB*02:02_02:01" "HLA-DQAB*03:01_03:01"
 [52] "HLA-DRB1*13:01"       "HLA-DRB1*13:05"       "HLA-DRB1*11:01"      
 [55] "HLA-DRB1*13:02"       "HLA-DRB1*08:04"       "HLA-DQAB*01:03_02:01"
 [58] "HLA-DRB1*14:54"       "HLA-DQAB*01:03_02:02" "HLA-DPAB*02:02_04:02"
 [61] "HLA-DPAB*02:02_04:01" "HLA-DQAB*01:04_05:03" "HLA-DPAB*02:01_10:01"
 [64] "HLA-DQAB*05:05_02:02" "HLA-DQAB*05:05_02:01" "HLA-DQAB*02:01_02:02"
 [67] "HLA-DQAB*02:01_02:01" "HLA-DRB1*13:03"       "HLA-DQAB*02:01_05:01"
 [70] "HLA-DPAB*02:01_11:01" "HLA-DQAB*03:03_02:02" "HLA-DQAB*03:03_02:01"
 [73] "HLA-DPAB*02:01_02:01" "HLA-DPAB*01:03_03:01" "HLA-DRB1*15:01"      
 [76] "HLA-DRB1*04:08"       "HLA-DQAB*03:01_06:03" "HLA-DQAB*03:01_06:02"
 [79] "HLA-DQAB*03:01_06:04" "HLA-DPAB*01:03_01:01" "HLA-DQAB*01:02_06:03"
 [82] "HLA-DQAB*04:01_05:01" "HLA-DPAB*01:03_13:01" "HLA-DQAB*01:02_03:03"
 [85] "HLA-DQAB*01:02_06:09" "HLA-DQAB*01:02_03:01" "HLA-DQAB*05:01_03:03"
 [88] "HLA-DQAB*05:01_06:03" "HLA-DQAB*05:01_06:02" "HLA-DRB1*15:03"      
 [91] "HLA-DRB1*15:02"       "HLA-DQAB*05:01_06:04" "HLA-DRB1*04:07"      
 [94] "HLA-DRB1*04:05"       "HLA-DRB1*04:04"       "HLA-DRB1*04:03"      
 [97] "HLA-DRB1*04:02"       "HLA-DRB1*04:01"       "HLA-DQAB*03:01_02:01"
[100] "HLA-DQAB*03:01_02:02" "HLA-DPAB*01:03_02:01" "HLA-DRB1*09:01"      
[103] "HLA-DQAB*01:02_06:04" "HLA-DPAB*02:01_05:01" "HLA-DRB1*16:02"      
[106] "HLA-DQAB*05:05_05:01" "HLA-DRB1*14:07"       "HLA-DRB1*14:04"      
[109] "HLA-DPAB*02:01_17:01" "HLA-DRB1*14:02"       "HLA-DQAB*04:01_03:01"
[112] "HLA-DRB1*14:01"       "HLA-DPAB*01:03_04:02" "HLA-DPAB*01:03_04:01"
[115] "HLA-DQAB*01:02_02:02" "HLA-DQAB*01:01_06:03" "HLA-DQAB*01:01_06:02"
[118] "HLA-DQAB*05:01_05:01" "HLA-DQAB*01:03_03:01" "HLA-DRB1*08:03"      
[121] "HLA-DRB1*08:01"       "HLA-DQAB*01:02_03:02" "HLA-DQAB*02:01_06:09"
[124] "HLA-DQAB*02:01_06:02" "HLA-DQAB*02:01_06:03" "HLA-DQAB*01:03_06:01"
[127] "HLA-DQAB*01:03_06:02" "HLA-DPAB*01:03_10:01" "HLA-DQAB*01:02_04:02"
[130] "HLA-DPAB*02:02_05:01" "HLA-DQAB*05:01_02:01" "HLA-DQAB*03:02_03:03"
[133] "HLA-DQAB*01:05_05:01" "HLA-DQAB*01:03_06:03" "HLA-DQAB*01:02_06:02"
> 
> # Outupts the name of the HLA-IIs
> write.csv(rownames(split_HLA)[HLA_II_index],"HLA_II_names.csv",row.names = F)
> 
> 
> # This outputs the index for python, subtract the index by 1 since python index starts at 0.
> write.table(HLA_II_index-1,"HLA_II_index.csv",row.names = F, col.names = FALSE)
> 
> # These are the HLA-II alleles that have higher score in specific model
> hla_ii_higher = c("HLA-DRB1*07:01", "HLA-DRB1*03:01", 
+                   "HLA-DQAB*01:01_05:01", "HLA-DQAB*02:01_02:02", 
+                   "HLA-DQAB*05:01_02:01")
> 
> # get the 0-indexed relative indices for these alleles
> which(rownames(split_HLA)[HLA_II_index]%in%hla_ii_higher) - 1
[1]  21  28  33  65 130
> 
> rownames(split_HLA)[HLA_II_index][which(rownames(split_HLA)[HLA_II_index]%in%hla_ii_higher)]
[1] "HLA-DRB1*07:01"       "HLA-DQAB*01:01_05:01" "HLA-DRB1*03:01"      
[4] "HLA-DQAB*02:01_02:02" "HLA-DQAB*05:01_02:01"
> 
> proc.time()
   user  system elapsed 
  0.596   0.288   0.925 
